{"ast":null,"code":"var _jsxFileName = \"/home/higor/ConstanciaTest/Project/frontend_constancia/src/Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './Login.css';\nimport axios from 'axios';\nimport { Navigate } from 'react-router-dom'; // Importe o componente Navigate\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login() {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const [loggedIn, setLoggedIn] = useState(false); // Estado para controlar se o usuário está logado ou não\n\n  const handleLogin = async e => {\n    e.preventDefault();\n    try {\n      // Enviar requisição para autenticar o usuário\n      const response = await axios.post('http://localhost:8000/login/', {\n        username: username,\n        password: password\n      });\n\n      // Armazenar o token JWT no local storage\n      localStorage.setItem('token', response.data.token);\n\n      // Se o login for bem-sucedido, atualize o estado para indicar que o usuário está logado\n      setLoggedIn(true);\n    } catch (error) {\n      // Se houver um erro no login, exiba uma mensagem de erro\n      setErrorMessage('Usuário ou senha inválidos.');\n      console.error('Erro ao fazer login:', error);\n    }\n  };\n\n  // Se o usuário estiver logado, redirecione para a rota de clientes inadimplentes\n  if (loggedIn) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/clientes-inadimplentes/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleLogin,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Nome de usu\\xE1rio\",\n        value: username,\n        onChange: e => setUsername(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Senha\",\n        value: password,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 24\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"u3euwoXWCquFK2/jyVYQbGEqUy8=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","axios","Navigate","jsxDEV","_jsxDEV","Login","_s","username","setUsername","password","setPassword","errorMessage","setErrorMessage","loggedIn","setLoggedIn","handleLogin","e","preventDefault","response","post","localStorage","setItem","data","token","error","console","to","fileName","_jsxFileName","lineNumber","columnNumber","className","children","onSubmit","type","placeholder","value","onChange","target","_c","$RefreshReg$"],"sources":["/home/higor/ConstanciaTest/Project/frontend_constancia/src/Login.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './Login.css';\nimport axios from 'axios';\nimport { Navigate } from 'react-router-dom'; // Importe o componente Navigate\n\nfunction Login() {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const [loggedIn, setLoggedIn] = useState(false); // Estado para controlar se o usuário está logado ou não\n\n  const handleLogin = async (e) => {\n    e.preventDefault();\n    try {\n      // Enviar requisição para autenticar o usuário\n      const response = await axios.post('http://localhost:8000/login/', {\n        username: username,\n        password: password\n      });\n      \n      // Armazenar o token JWT no local storage\n      localStorage.setItem('token', response.data.token);\n\n      // Se o login for bem-sucedido, atualize o estado para indicar que o usuário está logado\n      setLoggedIn(true);\n    } catch (error) {\n      // Se houver um erro no login, exiba uma mensagem de erro\n      setErrorMessage('Usuário ou senha inválidos.');\n      console.error('Erro ao fazer login:', error);\n    }\n  };\n\n  // Se o usuário estiver logado, redirecione para a rota de clientes inadimplentes\n  if (loggedIn) {\n    return <Navigate to=\"/clientes-inadimplentes/\" />;\n  }\n  \n  return (\n    <div className=\"login-container\">\n      <h2>Login</h2>\n      <form onSubmit={handleLogin}>\n        <input \n          type=\"text\" \n          placeholder=\"Nome de usuário\" \n          value={username} \n          onChange={(e) => setUsername(e.target.value)} \n        />\n        <input \n          type=\"password\" \n          placeholder=\"Senha\" \n          value={password} \n          onChange={(e) => setPassword(e.target.value)} \n        />\n        <button type=\"submit\">Login</button>\n      </form>\n      {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\n    </div>\n  );\n}\n\nexport default Login;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,aAAa;AACpB,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,kBAAkB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE7C,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EACf,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACW,YAAY,EAAEC,eAAe,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACa,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;;EAEjD,MAAMe,WAAW,GAAG,MAAOC,CAAC,IAAK;IAC/BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI;MACF;MACA,MAAMC,QAAQ,GAAG,MAAMjB,KAAK,CAACkB,IAAI,CAAC,8BAA8B,EAAE;QAChEZ,QAAQ,EAAEA,QAAQ;QAClBE,QAAQ,EAAEA;MACZ,CAAC,CAAC;;MAEF;MACAW,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEH,QAAQ,CAACI,IAAI,CAACC,KAAK,CAAC;;MAElD;MACAT,WAAW,CAAC,IAAI,CAAC;IACnB,CAAC,CAAC,OAAOU,KAAK,EAAE;MACd;MACAZ,eAAe,CAAC,6BAA6B,CAAC;MAC9Ca,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C;EACF,CAAC;;EAED;EACA,IAAIX,QAAQ,EAAE;IACZ,oBAAOT,OAAA,CAACF,QAAQ;MAACwB,EAAE,EAAC;IAA0B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACnD;EAEA,oBACE1B,OAAA;IAAK2B,SAAS,EAAC,iBAAiB;IAAAC,QAAA,gBAC9B5B,OAAA;MAAA4B,QAAA,EAAI;IAAK;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACd1B,OAAA;MAAM6B,QAAQ,EAAElB,WAAY;MAAAiB,QAAA,gBAC1B5B,OAAA;QACE8B,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,oBAAiB;QAC7BC,KAAK,EAAE7B,QAAS;QAChB8B,QAAQ,EAAGrB,CAAC,IAAKR,WAAW,CAACQ,CAAC,CAACsB,MAAM,CAACF,KAAK;MAAE;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9C,CAAC,eACF1B,OAAA;QACE8B,IAAI,EAAC,UAAU;QACfC,WAAW,EAAC,OAAO;QACnBC,KAAK,EAAE3B,QAAS;QAChB4B,QAAQ,EAAGrB,CAAC,IAAKN,WAAW,CAACM,CAAC,CAACsB,MAAM,CAACF,KAAK;MAAE;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9C,CAAC,eACF1B,OAAA;QAAQ8B,IAAI,EAAC,QAAQ;QAAAF,QAAA,EAAC;MAAK;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChC,CAAC,EACNnB,YAAY,iBAAIP,OAAA;MAAG2B,SAAS,EAAC,eAAe;MAAAC,QAAA,EAAErB;IAAY;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7D,CAAC;AAEV;AAACxB,EAAA,CArDQD,KAAK;AAAAkC,EAAA,GAALlC,KAAK;AAuDd,eAAeA,KAAK;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}